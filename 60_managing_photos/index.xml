<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Managing Photos on Amplify / AppSync / React Workshop</title>
    <link>https://awskrug.github.io/amplify-photo-gallery-workshop/60_managing_photos.html</link>
    <description>Recent content in Managing Photos on Amplify / AppSync / React Workshop</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    
	<atom:link href="https://awskrug.github.io/amplify-photo-gallery-workshop/60_managing_photos/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Adding Cloud Storage</title>
      <link>https://awskrug.github.io/amplify-photo-gallery-workshop/60_managing_photos/30_adding_storage.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://awskrug.github.io/amplify-photo-gallery-workshop/60_managing_photos/30_adding_storage.html</guid>
      <description>We&amp;rsquo;ll need a place to store all of the photos that get uploaded to our albums. Amazon Simple Storage Service (S3) is a great option for this and Amplify&amp;rsquo;s Storage module makes setting up and working with S3 very easy.
You can read more about Amplify&#39;s Storage module [here](https://aws-amplify.github.io/amplify-js/media/storage_guide).  Configuring and adding storage First, we&amp;rsquo;ll use the Amplify CLI to enable storage for our app. This will create a bucket on Amazon S3 and set it up with appropriate permissions so that users who are logged in to our app can read from and write to it.</description>
    </item>
    
    <item>
      <title>Managing Photos</title>
      <link>https://awskrug.github.io/amplify-photo-gallery-workshop/60_managing_photos/40_upload_photos_consolidated.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://awskrug.github.io/amplify-photo-gallery-workshop/60_managing_photos/40_upload_photos_consolidated.html</guid>
      <description>Now that we have an S3 bucket where our photos can get stored, we&amp;rsquo;ll want to create a UI that lets us upload photos to that bucket for storage. We&amp;rsquo;ll also need to track that the photo was intended to be part of a specific album that it was uploaded to, so that we can eventually load all of the photos that belong to that album.
Let&amp;rsquo;s create a new S3ImageUpload component that will contain an HTML file input element which will fire off an event handler when a user selects a photo.</description>
    </item>
    
  </channel>
</rss>